package SWEA_2032_사과나무구하기;

import java.io.*;
import java.util.*;

public class SWEA_2032_사과나무구하기 {
    static final int[] di = {-1, 1, 0, 0};
    static final int[] dj = {0, 0, -1, 1};

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        int N = Integer.parseInt(br.readLine());
        StringBuilder sb = new StringBuilder();
        int[][] a = new int[N][N];


        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine(), " ");
            for (int j = 0; j < N; j++) {
                a[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        int max = 0;

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                int sum = a[i][j];
                for (int d = 0; d < 4; d++) {
                    int ni = i + di[d];
                    int nj = j + dj[d];
                    if (0 <= ni && ni < N && 0 <= nj && nj < N) {
                        sum += a[ni][nj];
                    }
                }
                max = Math.max(max, sum);
            }
        }

        sb.append(max).append("\n");
        System.out.print(sb.toString());
        br.close();
    }
}
